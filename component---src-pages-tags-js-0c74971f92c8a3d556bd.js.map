{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/tags.js"],"names":["Header","siteTitle","style","background","marginBottom","display","flexDirection","justifyContent","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","TagsPage","props","allMarkdownRemark","group","className","map","tag","fieldValue","key","totalCount","pageQuery"],"mappings":"4IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBC,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIR,MAAO,CAAEM,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHT,MAAO,CACLU,MAAM,QACNC,eAAe,SAGhBZ,IAGL,wBAAIC,MAAO,CAAEM,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,QACHT,MAAO,CACLU,MAAM,QACNC,eAAe,SAJnB,gBAkBRb,EAAOc,aAAe,CACpBb,UAAU,IAGGD,Q,UCLAe,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQhB,UAAWgB,EAAKC,KAAKC,aAAaC,QAC1C,yBACElB,MAAO,CACLM,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,8ICvCV,4GA0BeC,UArBf,SAAkBC,GAEhB,IAAMR,EAAOQ,EAAMR,KAAKS,kBAAkBC,MAE1C,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,QACb,wCAEEX,EAAKY,KAAI,SAAAC,GAAG,OACV,kBAAC,OAAD,CAAMnB,GAAE,IAAMmB,EAAIC,WAAcC,IAAKF,EAAIC,YACtCD,EAAIC,WADP,QACwBD,EAAIG,WAD5B,WAcL,IAAMC,EAAS","file":"component---src-pages-tags-js-0c74971f92c8a3d556bd.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/tags\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          All tags\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport { Link, graphql } from \"gatsby\"\nimport Layout from '../components/layout';\nimport './house.css';\n\nfunction TagsPage(props) {\n\n  const data = props.data.allMarkdownRemark.group\n\n  return (\n    <Layout>\n      <div className=\"tags\">\n        <h1>All tags</h1>\n        {\n          data.map(tag => (\n            <Link to={`/${tag.fieldValue}`} key={tag.fieldValue}>\n              {tag.fieldValue} {`(${tag.totalCount})`}\n            </Link>\n          ))\n        }\n      </div>\n    </Layout>\n  )\n\n}\n\nexport default TagsPage;\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n\n`\n"],"sourceRoot":""}