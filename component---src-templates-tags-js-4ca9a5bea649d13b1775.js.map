{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/tags.js"],"names":["Header","siteTitle","style","background","marginBottom","display","flexDirection","justifyContent","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","Tags","props","houses","allMarkdownRemark","edges","tag","pageContext","className","map","i","node","fields","houseLink","key","frontmatter","address","query"],"mappings":"4IAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBC,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIR,MAAO,CAAEM,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHT,MAAO,CACLU,MAAM,QACNC,eAAe,SAGhBZ,IAGL,wBAAIC,MAAO,CAAEM,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,QACHT,MAAO,CACLU,MAAM,QACNC,eAAe,SAJnB,gBAkBRb,EAAOc,aAAe,CACpBb,UAAU,IAGGD,Q,UCLAe,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQhB,UAAWgB,EAAKC,KAAKC,aAAaC,QAC1C,yBACElB,MAAO,CACLM,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,8ICvCV,wGAwBeC,UAnBf,SAAcC,GACZ,IAAMC,EAASD,EAAMR,KAAKU,kBAAkBC,MACpCC,EAAQJ,EAAMK,YAAdD,IACR,OACE,kBAAC,IAAD,KACE,mDAA4BA,GAC5B,yBAAKE,UAAU,QAEXL,EAAOM,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACT,kBAAC,OAAD,CAAMvB,GAAIuB,EAAKC,OAAOC,UAAWC,IAAKJ,GACnCC,EAAKI,YAAYC,eAWzB,IAAMC,EAAK","file":"component---src-templates-tags-js-4ca9a5bea649d13b1775.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/tags\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          All tags\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout';\nimport '../pages/house.css'\n\nfunction Tags(props) {\n  const houses = props.data.allMarkdownRemark.edges;\n  const { tag } = props.pageContext;\n  return (\n    <Layout>\n      <h1>{`Available houses in ${tag}`}</h1>\n      <div className=\"tags\">\n        {\n          houses.map(({ node }, i) => (\n            <Link to={node.fields.houseLink} key={i} >\n              {node.frontmatter.address}\n            </Link>\n          ))\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags;\n\nexport const query = graphql`\n\n query TagsQuery($tag: String!) {\nallMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___price], order: DESC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            address\n          }\n          fields {\n            houseLink\n          }\n        }\n      }\n    }\n}\n`"],"sourceRoot":""}